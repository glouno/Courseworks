function [BW,maskedImage] = testingsegmentImage(RGB)
%segmentImage Segment image using auto-generated code from imageSegmenter app
%  [BW,MASKEDIMAGE] = segmentImage(RGB) segments image RGB using
%  auto-generated code from the imageSegmenter app. The final segmentation
%  is returned in BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 17-Dec-2020
%----------------------------------------------------


% Convert RGB image into L*a*b* color space.
X = rgb2lab(RGB);
gaborX = createGaborFeatures(X);

% Create empty mask.
BW = false(size(X,1),size(X,2));

% Local graph cut
xPos = [462.7653 477.7887 612.0610 590.4648 ];
yPos = [244.1033 475.0892 464.7606 236.5916 ];
m = size(BW, 1);
n = size(BW, 2);
ROI = poly2mask(xPos,yPos,m,n);
foregroundInd = [563048 563049 563050 563053 563054 563055 563062 563069 563074 563076 563082 564284 564321 564323 564324 564325 564328 565444 565487 565489 565537 566692 566712 567897 567900 567905 567907 568001 568003 568008 569150 570395 571560 571568 571569 571574 571577 571581 571585 571587 571592 572854 576461 577664 578865 582465 587265 588465 590865 593044 596864 601664 607664 610064 612245 614864 617264 621845 625662 626862 627844 628061 632643 635258 636243 636457 637657 641043 647257 650643 653045 654245 656645 659256 668645 671256 677045 684243 689043 691443 691656 695043 695232 696428 696430 697626 699843 702243 702419 703443 703446 707058 707061 707208 709471 709591 709592 710804 711968 711969 711971 711979 713107 713108 713112 713165 714307 714357 714404 714421 714428 714429 714430 714456 715519 715529 715531 715542 715544 715549 715611 716809 717989 718004 718005 719216 720387 720397 720425 721631 721634 721635 721636 721639 721642 721643 721645 722796 722797 722851 724001 724018 724020 724028 724029 724030 725202 725206 725207 725255 725256 725257 726456 726458 726459 ];
backgroundInd = [];
L = superpixels(X,9700,'IsInputLab',true);

% Convert L*a*b* range to [0 1]
scaledX = prepLab(X);
BW = BW | grabcut(scaledX,L,ROI,foregroundInd,backgroundInd);

% Dilate mask with rectangle
dimensions = [9 12];
se = strel('rectangle', dimensions);
BW = imdilate(BW, se);

% Active contour with texture
iterations = 61;
BW = activecontour(gaborX, BW, iterations, 'Chan-Vese');

% Clear borders
BW = imclearborder(BW);

% Create masked image.
maskedImage = RGB;
maskedImage(repmat(~BW,[1 1 3])) = 0;
end

function gaborFeatures = createGaborFeatures(im)

if size(im,3) == 3
    im = prepLab(im);
end

im = im2single(im);

imageSize = size(im);
numRows = imageSize(1);
numCols = imageSize(2);

wavelengthMin = 4/sqrt(2);
wavelengthMax = hypot(numRows,numCols);
n = floor(log2(wavelengthMax/wavelengthMin));
wavelength = 2.^(0:(n-2)) * wavelengthMin;

deltaTheta = 45;
orientation = 0:deltaTheta:(180-deltaTheta);

g = gabor(wavelength,orientation);
gabormag = imgaborfilt(im(:,:,1),g);

for i = 1:length(g)
    sigma = 0.5*g(i).Wavelength;
    K = 3;
    gabormag(:,:,i) = imgaussfilt(gabormag(:,:,i),K*sigma);
end

% Increases liklihood that neighboring pixels/subregions are segmented together
X = 1:numCols;
Y = 1:numRows;
[X,Y] = meshgrid(X,Y);
featureSet = cat(3,gabormag,X);
featureSet = cat(3,featureSet,Y);
featureSet = reshape(featureSet,numRows*numCols,[]);

% Normalize feature set
featureSet = featureSet - mean(featureSet);
featureSet = featureSet ./ std(featureSet);

gaborFeatures = reshape(featureSet,[numRows,numCols,size(featureSet,2)]);

% Add color/intensity into feature set
gaborFeatures = cat(3,gaborFeatures,im);

end

function out = prepLab(in)

% Convert L*a*b* image to range [0,1]
out = in;
out(:,:,1) = in(:,:,1) / 100;  % L range is [0 100].
out(:,:,2) = (in(:,:,2) + 86.1827) / 184.4170;  % a* range is [-86.1827,98.2343].
out(:,:,3) = (in(:,:,3) + 107.8602) / 202.3382;  % b* range is [-107.8602,94.4780].

end
